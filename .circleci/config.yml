version: 2

jobs:
  test_tls:
    docker:
      - image: docker:git
    steps:
      - checkout
      - setup_remote_docker
      - run: docker create -v /certs --name certs alpine:3.4 /bin/true
      - run: docker run --rm -e SSL_SUBJECT=test.example.com --volumes-from certs paulczar/omgwtfssl
      - run: docker run --rm -h test.example.com --volumes-from certs -d --privileged --name test-docker-daemon docker:stable-dind --storage-driver=overlay --tlsverify --tlscacert=/certs/ca.pem --tlscert=/certs/cert.pem --tlskey=/certs/key.pem
      - run: docker build -t boondock .
      - run: docker run -e -ti -e DOCKER_CERT_PATH=/certs -e DOCKER_HOST='tcp://test.example.com:2375' -e RUST_BACKTRACE=1 --volumes-from certs --rm --link test-docker-daemon:docker boondock /usr/local/bin/version_tls
  test_http:
    docker:
      - image: docker:git
    steps:
      - checkout
      - setup_remote_docker
      - run: docker run --rm -h test.example.com -d --privileged --name test-docker-daemon docker:stable-dind --storage-driver=overlay
      - run: docker build -t boondock .
      - run: docker run -e -ti -e DOCKER_HOST='tcp://test.example.com:2375' -e RUST_BACKTRACE=1 --rm --link test-docker-daemon:docker boondock /usr/local/bin/version_http
  test_unix:
    docker:
      - image: docker:git
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build -t boondock .
      - run: docker run -v /var/run/docker.sock:/var/run/docker.sock -ti -e RUST_BACKTRACE=1 --rm boondock /usr/local/bin/version_unix


workflows:
  version: 2
  test-image:
    jobs:
      - test_tls
      - test_http
      - test_unix
